<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.six.hrpms.dao.SalaryRecordMapper" >
  <resultMap id="BaseResultMap" type="com.six.hrpms.pojo.SalaryRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="salary" property="salary" jdbcType="DOUBLE" />
    <result column="work_time" property="workTime" jdbcType="DOUBLE" />
    <result column="late_time" property="lateTime" jdbcType="DOUBLE" />
    <result column="leave_early_time" property="leaveEarlyTime" jdbcType="DOUBLE" />
    <result column="business_time" property="businessTime" jdbcType="DOUBLE" />
    <result column="business_money" property="businessMoney" jdbcType="DOUBLE" />
    <result column="overtime_time" property="overtimeTime" jdbcType="DOUBLE" />
    <result column="leave_time" property="leaveTime" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, start_time, end_time, salary, work_time, late_time, leave_early_time, 
    business_time, business_money, overtime_time, leave_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.six.hrpms.pojo.SalaryRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from salary_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from salary_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from salary_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.six.hrpms.pojo.SalaryRecordExample" >
    delete from salary_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.six.hrpms.pojo.SalaryRecord" >
    insert into salary_record (id, user_id, start_time, 
      end_time, salary, work_time, 
      late_time, leave_early_time, business_time, 
      business_money, overtime_time, leave_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{salary,jdbcType=DOUBLE}, #{workTime,jdbcType=DOUBLE}, 
      #{lateTime,jdbcType=DOUBLE}, #{leaveEarlyTime,jdbcType=DOUBLE}, #{businessTime,jdbcType=DOUBLE}, 
      #{businessMoney,jdbcType=DOUBLE}, #{overtimeTime,jdbcType=DOUBLE}, #{leaveTime,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.six.hrpms.pojo.SalaryRecord" >
    insert into salary_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="workTime != null" >
        work_time,
      </if>
      <if test="lateTime != null" >
        late_time,
      </if>
      <if test="leaveEarlyTime != null" >
        leave_early_time,
      </if>
      <if test="businessTime != null" >
        business_time,
      </if>
      <if test="businessMoney != null" >
        business_money,
      </if>
      <if test="overtimeTime != null" >
        overtime_time,
      </if>
      <if test="leaveTime != null" >
        leave_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="workTime != null" >
        #{workTime,jdbcType=DOUBLE},
      </if>
      <if test="lateTime != null" >
        #{lateTime,jdbcType=DOUBLE},
      </if>
      <if test="leaveEarlyTime != null" >
        #{leaveEarlyTime,jdbcType=DOUBLE},
      </if>
      <if test="businessTime != null" >
        #{businessTime,jdbcType=DOUBLE},
      </if>
      <if test="businessMoney != null" >
        #{businessMoney,jdbcType=DOUBLE},
      </if>
      <if test="overtimeTime != null" >
        #{overtimeTime,jdbcType=DOUBLE},
      </if>
      <if test="leaveTime != null" >
        #{leaveTime,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.six.hrpms.pojo.SalaryRecordExample" resultType="java.lang.Integer" >
    select count(*) from salary_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update salary_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.workTime != null" >
        work_time = #{record.workTime,jdbcType=DOUBLE},
      </if>
      <if test="record.lateTime != null" >
        late_time = #{record.lateTime,jdbcType=DOUBLE},
      </if>
      <if test="record.leaveEarlyTime != null" >
        leave_early_time = #{record.leaveEarlyTime,jdbcType=DOUBLE},
      </if>
      <if test="record.businessTime != null" >
        business_time = #{record.businessTime,jdbcType=DOUBLE},
      </if>
      <if test="record.businessMoney != null" >
        business_money = #{record.businessMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.overtimeTime != null" >
        overtime_time = #{record.overtimeTime,jdbcType=DOUBLE},
      </if>
      <if test="record.leaveTime != null" >
        leave_time = #{record.leaveTime,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update salary_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      salary = #{record.salary,jdbcType=DOUBLE},
      work_time = #{record.workTime,jdbcType=DOUBLE},
      late_time = #{record.lateTime,jdbcType=DOUBLE},
      leave_early_time = #{record.leaveEarlyTime,jdbcType=DOUBLE},
      business_time = #{record.businessTime,jdbcType=DOUBLE},
      business_money = #{record.businessMoney,jdbcType=DOUBLE},
      overtime_time = #{record.overtimeTime,jdbcType=DOUBLE},
      leave_time = #{record.leaveTime,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.six.hrpms.pojo.SalaryRecord" >
    update salary_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="workTime != null" >
        work_time = #{workTime,jdbcType=DOUBLE},
      </if>
      <if test="lateTime != null" >
        late_time = #{lateTime,jdbcType=DOUBLE},
      </if>
      <if test="leaveEarlyTime != null" >
        leave_early_time = #{leaveEarlyTime,jdbcType=DOUBLE},
      </if>
      <if test="businessTime != null" >
        business_time = #{businessTime,jdbcType=DOUBLE},
      </if>
      <if test="businessMoney != null" >
        business_money = #{businessMoney,jdbcType=DOUBLE},
      </if>
      <if test="overtimeTime != null" >
        overtime_time = #{overtimeTime,jdbcType=DOUBLE},
      </if>
      <if test="leaveTime != null" >
        leave_time = #{leaveTime,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.six.hrpms.pojo.SalaryRecord" >
    update salary_record
    set user_id = #{userId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      salary = #{salary,jdbcType=DOUBLE},
      work_time = #{workTime,jdbcType=DOUBLE},
      late_time = #{lateTime,jdbcType=DOUBLE},
      leave_early_time = #{leaveEarlyTime,jdbcType=DOUBLE},
      business_time = #{businessTime,jdbcType=DOUBLE},
      business_money = #{businessMoney,jdbcType=DOUBLE},
      overtime_time = #{overtimeTime,jdbcType=DOUBLE},
      leave_time = #{leaveTime,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>